var mysql      = require('mysql');
var connection = mysql.createConnection({
    host     : 'localhost',
    user     : 'root', // change line to fit your requirements
    password : 'free sur4', // change line to fit your requirements
    database : 'exploitdb'
});

connection.connect(function(err) {
    if (err) {
        console.error('error connecting: ' + err.stack);
        return;
    }
    console.log('connected as id ' + connection.threadId);
});

module.exports = function(sequelize, DataTypes) {
    return null;
};

module.exports.getCategories = function() {
    return new Promise( (resolve, reject) => {
        const sql  = 'SELECT DISTINCT type FROM exploits';
        connection.query(sql, function(err, results) {
            if (err) return reject(err);
            resolve({ categories: results.map(x => x.type) });
        });
    });
}

module.exports.getExploits = function(id, options, callback) {
    var sql = 'SELECT * from exploits';
    var tmp = '';
    for (var key in options) {
        if (key == 'before' || key == 'after') {
            tmp += ' AND _date';
            if (key == 'before') {
                tmp += ' <= ';
            } else {
                tmp += ' >= ';
            }
            tmp += connection.escape(options[key]);
        }else if (key == 'take') {
            tmp += " LIMIT " + connection.escape(Number(options[key]));
        }else if (key == 'skip') {
            tmp += " OFFSET " + connection.escape(Number(options[key]));
        } else {
            tmp += " AND " + key + " LIKE " + connection.escape('%' +options[key] + '%');
        }
    }
    if (id != undefined) {
         sql += ' WHERE id = ' + connection.escape(id) + tmp;
    } else {
        // replace the first occurence of 'AND' with a 'WHERE'
        sql += tmp.replace('AND', 'WHERE');
    }

    connection.query(sql, function(err, results) {
        if (err) throw err;
        callback(results);
    });
}
