package com.blackbirdsoftware.exploitdb.activities;

import android.app.Activity;
import android.app.SearchManager;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.NavigationView;
import android.support.v4.app.Fragment;
import android.support.v4.view.GravityCompat;
import android.support.v4.view.MenuItemCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.SearchView;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.arlib.floatingsearchview.FloatingSearchView;
import com.blackbirdsoftware.exploitdb.MainActivity;
import com.blackbirdsoftware.exploitdb.R;
import com.facebook.AccessToken;
import com.facebook.AccessTokenTracker;
import com.facebook.FacebookSdk;
import com.facebook.GraphRequest;
import com.facebook.GraphResponse;
import com.facebook.HttpMethod;
import com.facebook.Profile;
import com.facebook.login.LoginManager;
import com.facebook.login.widget.ProfilePictureView;

import net.danlew.android.joda.JodaTimeAndroid;

import java.util.Set;


/**
 * Created by danielftapiar on 15-Apr-17.
 */

public abstract class BaseActivity extends AppCompatActivity {
    private DrawerLayout drawerLayout;
    private Toolbar toolbar;
    private NavigationView navigationView;

    private ProfilePictureView profilePictureView;
    private TextView profileNameView;
    private FloatingSearchView floatingSearchView;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        FacebookSdk.sdkInitialize(getApplicationContext());
        JodaTimeAndroid.init(this);
        setContentView(R.layout.drawer_layout);
        this.navigationView = (NavigationView)findViewById(R.id.navigation_view);
        this.toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(this.toolbar);
        this.drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
        Intent i = this.getIntent();
        View header = navigationView.getHeaderView(0);
        this.floatingSearchView = (FloatingSearchView) findViewById(R.id.floating_search_view);
        floatingSearchView.attachNavigationDrawerToMenuButton(this.drawerLayout);

        if(this.isLoggedIn()){


            AccessToken accessToken = AccessToken.getCurrentAccessToken();
            Profile profile = Profile.getCurrentProfile();
            String userId = accessToken.getUserId();
            String authToken = accessToken.getToken();
            Set<String> permissions = accessToken.getPermissions();

            this.profilePictureView = (ProfilePictureView) header.findViewById(R.id.friendProfilePicture);
            this.profilePictureView.setProfileId(userId);
            this.profilePictureView.setVisibility(View.VISIBLE);

            if(profile != null){

                this.profileNameView = (TextView) header.findViewById(R.id.facebookProfileName);
                this.profileNameView.setText(profile.getName());
                this.profileNameView.setVisibility(View.VISIBLE);
            }else
                Toast.makeText(getApplicationContext(),"PROFILE IS NULL GODDAMNIT!",Toast.LENGTH_LONG).show();

        }else{
            this.profilePictureView = (ProfilePictureView) header.findViewById(R.id.friendProfilePicture);
            this.profilePictureView.setVisibility(View.INVISIBLE);
        }
        initNavigationDrawer();
    }



    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // The action bar home/up action should open or close the drawer.
        switch (item.getItemId()) {
            case android.R.id.home:
                this.drawerLayout.openDrawer(GravityCompat.START);
                return true;
        }

        return super.onOptionsItemSelected(item);
    }
    public boolean isLoggedIn() {
        AccessToken accessToken = AccessToken.getCurrentAccessToken();
        return accessToken != null;
    }

    public void initNavigationDrawer() {

        this.navigationView = (NavigationView)findViewById(R.id.navigation_view);
        this.navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
            @Override
            public boolean onNavigationItemSelected(MenuItem menuItem) {

                return selectDrawerItem(menuItem);
            }
        });

        drawerLayout = (DrawerLayout)findViewById(R.id.drawer_layout);

        ActionBarDrawerToggle actionBarDrawerToggle = new ActionBarDrawerToggle(this,drawerLayout,toolbar,R.string.drawer_open,R.string.drawer_close){

            @Override
            public void onDrawerClosed(View v){
                super.onDrawerClosed(v);
            }

            @Override
            public void onDrawerOpened(View v) {
                super.onDrawerOpened(v);
            }
        };
        drawerLayout.addDrawerListener(actionBarDrawerToggle);
        actionBarDrawerToggle.syncState();
    }

    public boolean selectDrawerItem(MenuItem menuItem){
        int id = menuItem.getItemId();
        Intent intenet;

        switch (id){
            case R.id.home:
                Toast.makeText(getApplicationContext(),"Home",Toast.LENGTH_SHORT).show();
                drawerLayout.closeDrawers();
                intenet = new Intent(getApplicationContext(), MainActivity.class);
                startActivity(intenet);
                break;
            case R.id.settings:
                Toast.makeText(getApplicationContext(),"Settings",Toast.LENGTH_SHORT).show();
                break;
            case R.id.login:
                Toast.makeText(getApplicationContext(),"Login",Toast.LENGTH_SHORT).show();
                drawerLayout.closeDrawers();
                intenet = new Intent(getApplicationContext(), FacebookLoginActivity.class);
                startActivity(intenet);
                finish();

                break;
            case R.id.logout:
                disconnectFromFacebook();
                drawerLayout.closeDrawers();

        }
        return true;

    }
    public void disconnectFromFacebook(){
        if (AccessToken.getCurrentAccessToken() == null) {
            return; // already logged out
        }

        new GraphRequest(AccessToken.getCurrentAccessToken(), "/me/permissions/", null, HttpMethod.DELETE, new GraphRequest
                .Callback() {
            @Override
            public void onCompleted(GraphResponse graphResponse) {

                profilePictureView = (ProfilePictureView) findViewById(R.id.friendProfilePicture);
                profilePictureView.setVisibility(View.INVISIBLE);

                profileNameView = (TextView) findViewById(R.id.facebookProfileName);
                profileNameView.setVisibility(View.INVISIBLE);
                LoginManager.getInstance().logOut();

            }
        }).executeAsync();
    }



}
